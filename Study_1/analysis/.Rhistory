anova(lm_a_2, lm_a_3) # adding conversation topics adds significantly to the model, beyond moral concerns
anova(lm_a_3, lm_a_4) # adding interactions of concerns and topics adds significantly to the model
# Calculate moral Concerns percentages
df_plot <- df_cleaned_a %>% group_by(type) %>% dplyr::summarise(care = sum(care==1)/n()*100, fairness = sum(fairness==1)/n()*100,
loyalty = sum(loyalty==1)/n()*100, authority = sum(authority==1)/n()*100, purity = sum(purity==1)/n()*100)
# restructure data sets
df_plot <- df_plot %>% gather(-type, key="Concern", value = "Percentage")
# show plots
ggplot(data=df_plot, aes(x=type, fill=Concern)) + geom_bar(aes(x=type,y=Percentage),stat="identity", position="dodge") + ylab("Percent of posts with moral concerns") + xlab('Post type') + labs(fill="Moral Concern") + theme_bw()
# Get examples for moral values (from comments/posts)
# create data set by dividing messages into respective moral concerns (+ thin + non-moral)
# filter out messages that are under low interaction/engagement posts (less than 10 comments) to get more representative examples
df_cleaned_a_long <- df_a %>% mutate(Dominant_Topic = factor(Dominant_Topic)) %>% filter(!(type=="post" & num_comments<10) & !(type=="comment" & parent_num_comments < 10)) %>% mutate(moral_count = rowSums(select(., c(care, fairness, loyalty, authority, purity, thin)))) %>% filter(moral_count == 1 | moral_count == 0) %>% mutate(non_moral = ifelse(moral_count==0, 1, 0)) %>% pivot_longer(c(care, fairness, loyalty, authority, purity, thin, non_moral), names_to = "concern", values_to = "value")
#text can be "deleted" or "removed" for posts, then look at title!
set.seed(0)
moral_examples <- df_cleaned_a_long %>% filter(value==1) %>% dplyr::select(type, concern, title, text) %>% group_by(type, concern) %>% sample_n(10) %>% ungroup()
#moral values by number (1-7: authority, care, fairness, loyalty, non_moral, purity, thin)
nr_val = 1
moral_vals <- unique(moral_examples$concern)
mval <- moral_vals[nr_val] # convert number to moral concern name
nr = 1 #number of example
# print name of concern, example message title & text body
print(mval)
moral_examples[moral_examples$concern==mval,]$title[nr]
print("")
moral_examples[moral_examples$concern==mval,]$text[nr]
# Note, topic loading/match reflects how much a message reflects elements of a given topic, therefore a message can load highly on multiple topics
# Extract the 10 messages with the highest load on the respective topic
topics_examples <- df_a %>% group_by(Dominant_Topic) %>% arrange(desc(Topic_Perc_Contrib)) %>% do(head(., n=10))
topics_examples_showcase <- topics_examples %>% dplyr::select(Topic_Name, Dominant_Topic, Topic_Perc_Contrib, title, text)
# topics_examples_showcase %>% dplyr::select(Topic_Name, title, text) %>% head(15) # dplyr::select columns
nr = 253  # there are 10 examples per topic ->
print(as.character(topics_examples_showcase$Topic_Name[nr]))
print("")
topics_examples_showcase$title[nr]
print("")
topics_examples_showcase$text[nr]
# Get examples for moral values (comments/posts), filter out messages with low engagement to get more representative examples
df_cleaned_a_long <- df_a %>% mutate(Dominant_Topic = factor(Dominant_Topic)) %>% filter(!(type=="post" & num_comments<5) & !(type=="comment" & parent_num_comments < 5)) %>% mutate(moral_count = rowSums(select(., c(care, fairness, loyalty, authority, purity)))) %>% filter(moral_count == 1 | moral_count == 0) %>% mutate(non_moral = ifelse(moral_count==0, 1, 0)) %>% pivot_longer(c(care, fairness, loyalty, authority, purity, non_moral), names_to = "concern", values_to = "value")
#text can be "deleted" or "removed" for posts, then look at title!
#extract 7 messages with highest load on a given conversation topic that also include the respective moral concern
set.seed(0)
moral_examples_values <- df_cleaned_a_long %>% filter(value==1) %>% dplyr::select(type, concern, title, text, Topic_Name, Topic_Perc_Contrib) %>% group_by(Topic_Name, concern) %>% arrange(desc(Topic_Perc_Contrib)) %>% do(head(., n=7)) %>% ungroup()
nr = 1019 #row number
moral_examples_values$concern[nr] #name of moral concern
as.character(moral_examples_values$Topic_Name[nr]) # name of topic
print("")
moral_examples_values$title[nr] #title
print("")
moral_examples_values$text[nr]
#3 authority x negative_thoughts
# get topics from posts and comments, then match comments with their respective posts they were posted under
df_posts_a <- df_cleaned_a %>% filter(type=="post") %>% dplyr::select(id, Topic_Name, score)
df_comments_a <- df_cleaned_a %>% filter(type=="comment") %>% dplyr::select(id, parent_post, Topic_Name, score)
df_paired_a <- merge(df_comments_a, df_posts_a, by.x="parent_post", by.y="id") #merge comments with parent posts
# get which post topic was most frequently responded by which message topic
df_paired_freq <- df_paired_a %>% group_by(Topic_Name.y, Topic_Name.x) %>% summarise(n = n()) %>% mutate(freq = n / sum(n)) %>% group_by(Topic_Name.y) %>% arrange(desc(freq))
#robustness check:
# manual check of example messages
# this check that looks into what topic is used to respond to a given topic (20 same topic, 6 different but related/reasonable!)
df_paired_freq %>% group_by(Topic_Name.y) %>% arrange(desc(freq)) %>% do(head(., n=1)) %>% mutate(freq = round(freq*100,1)) #y = post, x = comment
setwd("H:/My Drive/PhD/Research/Eager/moral_alignment_github/Study_3/scripts")
rm(list = ls())
library(tidyverse)
#### Load Model comparisons
results_comparison <- readRDS("../results/results_comparison.rds")
# Show main model summaries (moral alignment & mediation)
results_m4 <- readRDS("../results/m4_effects.rds")
results_m6 <- readRDS("../results/m6_effects.rds")
results_mediation <- readRDS("../mediations/results_mediation_del.rds")
results_mediation_alt <- readRDS("../mediations/results_mediation_RT.rds") # mediation with alternative mediator (response time)
########### Additional analyses
#### Additional analyses summaries
#m10 shows that for non-moral stimuli, analytical thinking increases truth discernment (reduced sharing of fake-news, compared to true-news)
results_m10 <- readRDS("../results/m10_effects.rds") #positive crt & veracity interaction
## plot for m10
df_m10 <- data.frame(veracity = character(),    # Create empty data frame
effect = numeric(),
lower = numeric(),
upper = numeric(),
stringsAsFactors = FALSE)
df_m10[1,] <- list("False", -0.10, -0.17,  -0.02)
df_m10[2,] <- list("True", -0.04, -0.14,  0.05)
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", alpha=0.9, size=1.3, position="dodge") +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
library(hrbrthemes)
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", alpha=0.9, size=1.3, position="dodge") +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", alpha=0.9, size=1, position="dodge") +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", alpha=0.9, size=0.5, position="dodge") +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", alpha=0.9, size=0.5) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", alpha=0.5, size=0.5) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=0.5) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.5, size=0.5) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
df_results <- data.frame(values = character(),    # Create empty data frame
framing = character(),
effect = numeric(),
lower = numeric(),
upper = numeric(),
stringsAsFactors = FALSE)
df_results[1,] <- list("Binding", "Binding", 0.26,  0.17,   0.34)
df_results[2,] <- list("Binding", "Individualizing", 0.11,  0.02,   0.20)
df_results[3,] <- list("Binding", "Nonmoral", 0.15,  0.06,   0.24)
df_results[4,] <- list("Individualizing", "Binding", 0.11,  0.03,   0.19)
df_results[5,] <- list("Individualizing", "Individualizing", 0.26,  0.18,   0.34)
df_results[6,] <- list("Individualizing", "Nonmoral", 0.13,  0.06,   0.21)
df_results[7,] <- list("Proportional", "Binding", 0.01,  -0.08,  0.10)
df_results[8,] <- list("Proportional", "Individualizing", -0.01, -0.10,  0.08)
df_results[9,] <- list("Proportional", "Nonmoral", 0.02,  -0.07,  0.11)
df_results[10,] <- list("Binding", "Individualizing", 0.14,  0.05,   0.23)
df_results[11,] <- list("Binding", "Nonmoral", 0.11,  0.02,   0.19 )
df_results[12,] <- list("Individualizing", "Binding", 0.15,  0.08,   0.22)
df_results[13,] <- list("Individualizing", "Nonmoral", 0.13,  0.05,   0.20)
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position="dodge") +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=1, position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=1, size=1, position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1, position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", size=1, position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position="dodge") +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.5)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=2)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=1.5)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=1)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.5)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.75)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_ipsum_tw()
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_ipsum_tw()
df_results[10:13,]
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_ipsum_tw()
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_ipsum()
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_bw()
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal()
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal() +
theme(axis.text.x = element_text(size = 20, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 20, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 20, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 20, hjust = .5, vjust = .5, face = "bold"))
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal() +
theme(axis.text.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 12, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 12, hjust = .5, vjust = .5, face = "bold"))
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal() +
theme(axis.text.x = element_text(size = 12, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 12, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
df_results <- data.frame(values = character(),    # Create empty data frame
framing = character(),
effect = numeric(),
lower = numeric(),
upper = numeric(),
stringsAsFactors = FALSE)
df_results[1,] <- list("Binding", "Binding", 0.26,  0.17,   0.34)
df_results[2,] <- list("Binding", "Individualizing", 0.11,  0.02,   0.20)
df_results[3,] <- list("Binding", "Nonmoral", 0.15,  0.06,   0.24)
df_results[4,] <- list("Individualizing", "Binding", 0.11,  0.03,   0.19)
df_results[5,] <- list("Individualizing", "Individualizing", 0.26,  0.18,   0.34)
df_results[6,] <- list("Individualizing", "Nonmoral", 0.13,  0.06,   0.21)
# df_results[7,] <- list("Proportional", "Binding", 0.01,  -0.08,  0.10)
# df_results[8,] <- list("Proportional", "Individualizing", -0.01, -0.10,  0.08)
# df_results[9,] <- list("Proportional", "Nonmoral", 0.02,  -0.07,  0.11)
df_results[10,] <- list("Binding", "Individualizing", 0.14,  0.05,   0.23)
df_results[11,] <- list("Binding", "Nonmoral", 0.11,  0.02,   0.19 )
df_results[12,] <- list("Individualizing", "Binding", 0.15,  0.08,   0.22)
df_results[13,] <- list("Individualizing", "Nonmoral", 0.13,  0.05,   0.20)
# within-groups
ggplot(df_results[1:9,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
df_results
# within-groups
ggplot(df_results[1:6,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
setwd("H:/My Drive/PhD/Research/Eager/moral_alignment_github/Study_2b/scripts")
rm(list = ls())
library(tidyverse)
#### Load Model comparisons
results_comparison <- readRDS("../results/results_comparison.rds") #compares models out-of-sample prediction performance
#### Main Model Summaries
results_m4 <- readRDS("../results/m4_effects.rds") #summarizes results for the main model
results_m6 <- readRDS("../results/m6_effects.rds") #summarizes results for the main model (controlled for veracity)
results_mediation <- readRDS("../results/results_mediation.rds") #shows that the effect of matching moral values and post framing is mediated by perceived alignment and agreement with a post
##### Plots #########
df_results <- data.frame(values = character(),    # Create empty data frame
framing = character(),
effect = numeric(),
lower = numeric(),
upper = numeric(),
stringsAsFactors = FALSE)
df_results[1,] <- list("Binding", "Binding", 0.26,  0.16,   0.36)
df_results[2,] <- list("Binding", "Individualizing", 0.14,  0.04,  0.24)
df_results[3,] <- list("Binding", "Nonmoral", 0.20,  0.10,   0.30)
df_results[4,] <- list("Individualizing", "Binding", 0.07,  -0.01,  0.15)
df_results[5,] <- list("Individualizing", "Individualizing", 0.23,  0.16,   0.31)
df_results[6,] <- list("Individualizing", "Nonmoral", -0.05, -0.14,  0.04)
df_results[7,] <- list("Proportional", "Binding", -0.00, -0.09,  0.09)
df_results[8,] <- list("Proportional", "Individualizing", -0.05, -0.14,  0.04)
df_results[9,] <- list("Proportional", "Nonmoral", -0.03, -0.12,  0.06)
df_results[10,] <- list("Binding", "Individualizing", 0.12,  0.03,   0.21)
df_results[11,] <- list("Binding", "Nonmoral", 0.06,  -0.04,  0.15)
df_results[12,] <- list("Individualizing", "Binding", 0.16,  0.09,   0.24)
df_results[13,] <- list("Individualizing", "Nonmoral", 0.10,  0.01,   0.18)
# within-groups
ggplot(df_results[1:6,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral values across framing conditions") + xlab("Moral Values") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
# between-groups
ggplot(df_results[10:13,], aes(x = values, y=effect, fill=framing)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width=.3, size=0.5, position=position_dodge(width=0.9)) +
ggtitle("Moral alignment vs misalignment") + xlab("Moral Values") + ylab("Effect size difference") +
scale_fill_discrete(name = "Framing Contrast") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal()
setwd("H:/My Drive/PhD/Research/Eager/moral_alignment_github/Study_3/scripts")
rm(list = ls())
# Notes -------------------------------------------------------------------
# This scripts loads and outputs summaries for the main models and the mediations (Study 3)
# poentially split files (summary, plots, ...)
# Library -----------------------------------------------------------------
library(tidyverse)
library(hrbrthemes)
#### Load Model comparisons
results_comparison <- readRDS("../results/results_comparison.rds")
# Show main model summaries (moral alignment & mediation)
results_m4 <- readRDS("../results/m4_effects.rds")
results_m6 <- readRDS("../results/m6_effects.rds")
results_mediation <- readRDS("../mediations/results_mediation_del.rds")
results_mediation_alt <- readRDS("../mediations/results_mediation_RT.rds") # mediation with alternative mediator (response time)
########### Additional analyses
#### Additional analyses summaries
#m10 shows that for non-moral stimuli, analytical thinking increases truth discernment (reduced sharing of fake-news, compared to true-news)
results_m10 <- readRDS("../results/m10_effects.rds") #positive crt & veracity interaction
## plot for m10
df_m10 <- data.frame(veracity = character(),    # Create empty data frame
effect = numeric(),
lower = numeric(),
upper = numeric(),
stringsAsFactors = FALSE)
df_m10[1,] <- list("False", -0.10, -0.17,  -0.02)
df_m10[2,] <- list("True", -0.04, -0.14,  0.05)
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal()
ggplot(df_m10, aes(x = veracity, y=effect)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Effect of analytical thinking on nonmoral posts") + xlab("Headline veracity") + ylab("Effect size") +
scale_fill_discrete(name = "Framing") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
setwd("H:/My Drive/PhD/Research/Eager/moral_alignment_github/Study_1/analysis")
# between-groups
ggplot(df_results[grepl("vs", df_results$group),], aes(x = framing, y=effect, fill=outcome)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Anti-vax vs Pro-vax") + xlab("Moral Framing") + ylab("Effect size") +
scale_fill_discrete(name = "Engagement Metric") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
rm(list = ls())
library(tidyverse)
#################### Main Analyses (Binding/Individualizing values)
#### Retweets
comparison_rt_binding <- readRDS("results/binding/comparison_rt.rds") #compares models out-of-sample prediction performance
results_m2_rt_binding <- readRDS("results/binding/m2_rt_effects.rds") #summarizes results for the main model
#### Favourite count
comparison_fv_binding <- readRDS("results/binding/comparison_fv.rds") #compares models out-of-sample prediction performance
results_m2_fv_binding <- readRDS("results/binding/m2_fv_effects.rds") #summarizes results for the main model
#################### Additional Analyses (All moral foundations)
#### Retweets
comparison_rt_full <- readRDS("results/full/comparison_rt.rds") #compares models out-of-sample prediction performance
results_m2_rt_full <- readRDS("results/full/m2_rt_effects.rds") #summarizes results for the main model
#### Favourite count
comparison_fv_full <- readRDS("results/full/comparison_fv.rds") #compares models out-of-sample prediction performance
results_m2_fv_full <- readRDS("results/full/m2_fv_effects.rds") #summarizes results for the main model
############## Check inter-correlation of tweet classifier (Are the same tweets classified as binding/individualizing?)
# Import data
df_anti_binding <- read_csv("../results/stance/antivax_binding.csv") %>% select(-c(full_text))
df_pro_binding <- read_csv("../results/stance/provax_binding.csv") %>% select(-c(full_text))
# Prepare data (filter, merge, convert data type)
df_total_binding <- rbind(df_anti_binding, df_pro_binding) %>% mutate(
binding = factor(binding),
individual = factor(individual),
stance = factor(stance_label, labels = c("anti-vax", "pro-vax"))
)
individual = df_total_binding$individual
individual = as.numeric(levels(individual))[individual]
binding = df_total_binding$binding
binding = as.numeric(levels(binding))[binding]
# calculate inter-correlation
cor.test(individual, binding) #low inter-correlation (meaning that the classifier did not simply classify the same posts as binding and individualizing)
########## Plots
df_results <- data.frame(group = character(),    # Create empty data frame
framing = character(),
outcome = character(),
effect = numeric(),
lower = numeric(),
upper = numeric(),
stringsAsFactors = FALSE)
df_results[1,] <- list("Anti-vax", "Individualizing vs Binding", "Retweets", -0.02, -0.15, 0.11)
df_results[2,] <- list("Pro-vax", "Individualizing vs Binding", "Retweets", 0.41, 0.21, 0.60)
df_results[3,] <- list("Anti-vax vs Pro-vax", "Binding", "Retweets", 0.23, 0.03, 0.42)
df_results[4,] <- list("Anti-vax vs Pro-vax", "Individualizing", "Retweets", -0.20, -0.39, -0.09)
df_results[5,] <- list("Anti-vax", "Individualizing vs Binding", "Likes", -0.39, -0.70,  -0.06)
df_results[6,] <- list("Pro-vax", "Individualizing vs Binding", "Likes", 0.80,  0.20,   1.36)
df_results[7,] <- list("Anti-vax vs Pro-vax", "Binding", "Likes", 0.10,  -0.41,  0.60)
df_results[8,] <- list("Anti-vax vs Pro-vax", "Individualizing", "Likes", -1.07,  -1.38, -0.78)
# between-groups
ggplot(df_results[grepl("vs", df_results$group),], aes(x = framing, y=effect, fill=outcome)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Anti-vax vs Pro-vax") + xlab("Moral Framing") + ylab("Effect size") +
scale_fill_discrete(name = "Engagement Metric") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
# within-groups
ggplot(df_results[!grepl("vs", df_results$group),], aes(x = group, y=effect, fill=outcome)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Individualizing vs Binding Framing") + xlab("Stance") + ylab("Effect size") +
scale_fill_discrete(name = "Engagement Metric") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
# between-groups
ggplot(df_results[grepl("vs", df_results$group),], aes(x = framing, y=effect, fill=outcome)) + geom_bar(stat="identity", position="dodge") +
geom_errorbar(aes(ymin=lower, ymax=upper), colour="black", width = 0.5, position=position_dodge(width=0.9)) +
ggtitle("Anti-vax vs Pro-vax") + xlab("Moral Framing") + ylab("Effect size difference") +
scale_fill_discrete(name = "Engagement Metric") + theme_minimal() +
theme(axis.text.x = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.text.y = element_text(size = 14, hjust = .5, vjust = .5, face = "bold"),
axis.title.x = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"),
axis.title.y = element_text(size = 18, hjust = .5, vjust = .5, face = "bold"))
